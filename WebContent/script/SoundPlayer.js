// Generated by CoffeeScript 1.4.0
(function() {

  define(['SoundCloudAPI', 'Backbone'], function(SC, Backbone) {
    var SoundPlayer, instance;
    instance = null;
    SoundPlayer = function() {
      if (instance) {
        throw new Error('Only one instance can be instantiated.');
      }
      return this.initialize();
    };
    SoundPlayer.prototype.initialize = function() {
      SC.initialize({
        client_id: '8ef8b80025535d68a51f4ee5c3343fc0',
        redirect_uri: 'http://kotaroshima.github.com/playlist/WebContent/callback.html'
      });
      this.domNode = document.getElementById('embedContainer');
      return this;
    };
    SoundPlayer.getInstance = function() {
      if (!instance) {
        instance = new SoundPlayer();
      }
      return instance;
    };
    SoundPlayer.prototype.setup = function(callback) {
      SC.get('/tracks', {
        order: 'hotness',
        limit: 10,
        filter: 'streamable'
      }, callback);
    };
    SoundPlayer.prototype.play = function(model) {
      var url,
        _this = this;
      Backbone.trigger('SONG_STARTED', model);
      url = model.get('uri');
      if (!this._playerInit) {
        SC.oEmbed(url, {
          auto_play: true
        }, function(response) {
          var widget;
          _this.domNode.innerHTML = response.html;
          widget = _this._widget = SC.Widget($('#embedContainer IFRAME').get(0));
          widget.bind(SC.Widget.Events.FINISH, function() {
            Backbone.trigger('SONG_FINISHED');
          });
          _this._playerInit = true;
          widget.play();
        });
      } else {
        this._widget.load(url, {
          auto_play: true
        });
        this._widget.play();
      }
    };
    SoundPlayer.prototype.search = function(searchString, callback) {
      SC.get('/tracks', {
        q: searchString
      }, callback);
    };
    return SoundPlayer.getInstance();
  });

}).call(this);
