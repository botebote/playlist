// Generated by CoffeeScript 1.6.2
(function() {
  define(['Backpack', 'SongItemView', 'SoundPlayer', 'text!template/SongListContainerView.html'], function(Backpack, SongItemView, SoundPlayer, viewTemplate) {
    var player;

    player = SoundPlayer.getInstance();
    return Backpack.View.extend({
      template: _.template(viewTemplate),
      events: {
        'click #show-playlist-button': 'onPlayListButtonClicked',
        'click .now-playing-button': 'onNowPlayingButtonClicked',
        'click #search-button': 'onSearchButtonClicked'
      },
      initialize: function(options) {
        var collection, songListView,
          _this = this;

        Backpack.View.prototype.initialize.apply(this, arguments);
        this.render();
        this.searchBox = this.$('#search-box');
        this.searchBox.keyup(function(e) {
          if (e.which === 13) {
            _this.search(_this.searchBox.val());
          }
        });
        collection = this.collection = new Backpack.Collection(null, {
          model: Backpack.Model
        });
        songListView = new Backpack.ListView({
          collection: collection,
          itemView: SongItemView,
          subscribers: {
            SONGLIST_LOADING: 'setLoading'
          }
        });
        this.$('#song-list-view').append(songListView.$el);
        player.setup($('#embed-container'), function(tracks) {
          collection.reset(tracks);
        });
      },
      render: function() {
        this.$el.html(this.template());
        return this;
      },
      onPlayListButtonClicked: function() {},
      onNowPlayingButtonClicked: function() {},
      onSearchButtonClicked: function() {
        this.search(this.searchBox.val());
      },
      search: function(searchString) {
        var _this = this;

        player.loadTracks({
          q: searchString
        }, function(tracks) {
          _this.collection.reset(tracks);
        });
      }
    });
  });

}).call(this);
